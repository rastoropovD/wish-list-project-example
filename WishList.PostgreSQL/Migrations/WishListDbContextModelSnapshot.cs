// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WishList.PostgreSQL.Data;

#nullable disable

namespace WishList.PostgreSQL.Migrations
{
    [DbContext(typeof(WishListDbContext))]
    partial class WishListDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WishList.PostgreSQL.Entities.GuestEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("HolidayId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsVisited")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("SelectedPresentId")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("HolidayId");

                    b.HasIndex("SelectedPresentId")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("Guests");
                });

            modelBuilder.Entity("WishList.PostgreSQL.Entities.HolidayEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("StartDateTimestamp")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("StartDateTimestamp");

                    b.ToTable("Holidays");
                });

            modelBuilder.Entity("WishList.PostgreSQL.Entities.PresentEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("GuestId")
                        .HasColumnType("text");

                    b.Property<string>("HolidayId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsSelected")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("HolidayId");

                    b.ToTable("Presents");
                });

            modelBuilder.Entity("WishList.PostgreSQL.Entities.UserEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("CreatedAtTimestamp")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAtTimestamp");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WishList.PostgreSQL.Entities.GuestEntity", b =>
                {
                    b.HasOne("WishList.PostgreSQL.Entities.HolidayEntity", "Holiday")
                        .WithMany("Guests")
                        .HasForeignKey("HolidayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WishList.PostgreSQL.Entities.PresentEntity", "SelectedPresent")
                        .WithOne("PresentBy")
                        .HasForeignKey("WishList.PostgreSQL.Entities.GuestEntity", "SelectedPresentId");

                    b.HasOne("WishList.PostgreSQL.Entities.UserEntity", "User")
                        .WithMany("GuestIn")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Holiday");

                    b.Navigation("SelectedPresent");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WishList.PostgreSQL.Entities.PresentEntity", b =>
                {
                    b.HasOne("WishList.PostgreSQL.Entities.HolidayEntity", "Holiday")
                        .WithMany("Presents")
                        .HasForeignKey("HolidayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Holiday");
                });

            modelBuilder.Entity("WishList.PostgreSQL.Entities.HolidayEntity", b =>
                {
                    b.Navigation("Guests");

                    b.Navigation("Presents");
                });

            modelBuilder.Entity("WishList.PostgreSQL.Entities.PresentEntity", b =>
                {
                    b.Navigation("PresentBy");
                });

            modelBuilder.Entity("WishList.PostgreSQL.Entities.UserEntity", b =>
                {
                    b.Navigation("GuestIn");
                });
#pragma warning restore 612, 618
        }
    }
}
